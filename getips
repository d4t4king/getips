#!/usr/bin/env ruby

require 'colorize'
require 'getoptlong'

opts = GetoptLong.new(
	[ '--help', '-h', GetoptLong::NO_ARGUMENT ],
	[ '--web', '-w', GetoptLong::OPTIONAL_ARGUMENT ],
	[ '--iptables', '-i', GetoptLong::NO_ARGUMENT ],
	[ '--all', '-a', GetoptLong::OPTIONAL_ARGUMENT ]
)

def usage()
	puts <<-EOF
getips [OPTIONS]

-h, --help:
	show help

-w, --web:
	search for IPs in web server logs

-i, --iptables:
	search for IPs from iptables deny logs (syslog, messages)

-a, --all:
	search both options above
EOF

	exit 1
end

web = nil; ipt = nil; all = nil
opts.each do |opt,arg|
	case opt
	when '--web'
		if !arg.nil? && arg != ''
			web = arg
		else
			web = true
		end
	when '--iptables'
		ipt = true
	when '--all'
		if !arg.nil? && arg != ''
			web = arg
		else
			web = true
		end
		ipt = true
		if ! arg.nil && arg != ''
			all = arg
		else
			all = true
		end
	when '--help'
		usage
	end
end

if ! web && ! ipt && ! all
	usage
end

def gatherIPsFromWeb(svr_type)
	puts "Will gather from web logs from #{svr_type}.".green
	ips = Hash.new
	case svr_type
	when /apache/
		if File.exists? '/var/log/apache*/access_log'
			puts "Found access log (a).".green
		else
			puts "Cannot find access log (a).".red
		end
	when /nginx/
		if File.exists? '/var/log/nginx/access.log'
			puts "Found access log (n).".green
			File.open('/var/log/nginx/access.log').each_line do |line|
				line.chomp!
				ip = line.split(' ')[0]
				next if /::?/		# skip IPv6 addresses
				unless ips.has_key? ip
					ips[ip] = 1
				else
					ips[ip] += 1
				end
			end		
		else
			puts "Cannot find access log (n).".red
		end
		return ips
	end
end

def gatherFromIptables()
	puts "Will gather from system logs (iptables).".blue
end

ips2scan = Hash.new
if web && ! all
	ips2scan = gatherIPsFromWeb web
end

if ipt && ! all
	ips2scan = gatherFromIptables
end

if all
	ips2scan = gatherIPsFromWeb web
	ips2scan.merge! gatherFromIptables
end

puts "Found #{ips2scan.keys.length} ips to scan.".yellow
